/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Connection1;
import model.MajReqp;
import model.MajReqv;
import view.client;
/**
 *
 * @author Anis
 */
public class reservation extends javax.swing.JFrame {

     Connection1 co= new Connection1();
    Statement st;
    ResultSet rs;
    private ResultSet rst;
    DefaultTableModel model= new DefaultTableModel();
    public reservation() throws SQLException {
         initComponents();
         icon();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
         setResizable(false);
      try { 
         st=co.connecterBD().createStatement();
            rs=st.executeQuery("select*from reservation");
            // l'ajout des collonnes au modele 
            model.addColumn("personne");
            model.addColumn("voiture");
            model.addColumn("datedeb");
            model.addColumn("datefin");
            model.addColumn("versement");
            //model.addColumn("etat");
           
            
            // l'ajout des lignes dans le model 
            while (rs.next() ) {                
                model.addRow(new Object[]{rs.getObject("personne"),
                    rs.getObject("voiture"),
                    rs.getObject("datedeb"),
                    rs.getObject("datefin"),
                    rs.getObject("versement"),
                    //rs.getObject("etat"),
                    }); 
                
                
            }
            tableSt.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
      MajReqp ma = new MajReqp();
        for (int i = 0; i < ma.getIdClient().size(); i++) {
             personne.addItem(ma.getIdClient().get(i));
        }
       
        for (int i = 0; i < ma.getIdVehicule().size(); i++) {
             voiture.addItem(ma.getIdVehicule().get(i));
        }
     
         
    }
   void icon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().
                getResource("logo.png")));
    }
    public void actualisation(){
        model.setRowCount(0);
        model.setColumnCount(0);
        try { 
         st=co.connecterBD().createStatement();
            rs=st.executeQuery("select*from reservation");
            // l'ajout des collonnes au modele 
            model.addColumn("personne");
            model.addColumn("voiture");
            model.addColumn("datedeb");
            model.addColumn("datefin");
            model.addColumn("versement");
            //model.addColumn("etat");
           
            
            // l'ajout des lignes dans le model 
            while (rs.next() ) {                
                model.addRow(new Object[]{rs.getObject("personne"),
                    rs.getObject("voiture"),
                    rs.getObject("datedeb"),
                    rs.getObject("datefin"),
                    rs.getObject("versement"),
                    //rs.getObject("etat"),
                    }); 
                
                
            }
            tableSt.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }public void affiche(int l){
        personne.setSelectedItem(tableSt.getValueAt(l, 0).toString());
        voiture.setSelectedItem(tableSt.getValueAt(l, 1).toString());
        datedeb.setText(tableSt.getValueAt(l, 2).toString());
        datefin.setText(tableSt.getValueAt(l, 3).toString());
        versement.setText(tableSt.getValueAt(l, 4).toString());
       //numtel.setText(tableSt.getValueAt(l, 5).toString());
       ;
    }
     public void viderFormulaire() {
        personne.setSelectedItem(null);
        voiture.setSelectedItem(null);
        datedeb.setText(null);
        datefin.setText(null);
        versement.setText(null);
        //numtel.setText(null);
        
        
        
    }
     
     


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        voiture = new javax.swing.JComboBox();
        personne = new javax.swing.JComboBox();
        ajout = new javax.swing.JButton();
        modif = new javax.swing.JButton();
        sup = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        trech = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSt = new javax.swing.JTable();
        datedeb = new javax.swing.JTextField();
        versement = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        datefin = new javax.swing.JTextField();
        archive = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1300, 450));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setText("Veuillez renseigner les cahmps suivants");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 65, 480, 36));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel2.setText("Client");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 112, 132, 27));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel3.setText("Véhicule");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 150, 132, 27));

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel4.setText("Date Début");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 190, 132, 27));

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel5.setText("Versement");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 270, 132, 27));

        voiture.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        getContentPane().add(voiture, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 152, 350, 27));

        personne.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        personne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personneActionPerformed(evt);
            }
        });
        getContentPane().add(personne, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 114, 350, 27));

        ajout.setFont(new java.awt.Font("Comic Sans MS", 0, 22)); // NOI18N
        ajout.setForeground(new java.awt.Color(0, 153, 153));
        ajout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/addd.png"))); // NOI18N
        ajout.setText("Ajouter");
        ajout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutActionPerformed(evt);
            }
        });
        getContentPane().add(ajout, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 170, 50));

        modif.setFont(new java.awt.Font("Comic Sans MS", 0, 22)); // NOI18N
        modif.setForeground(new java.awt.Color(0, 153, 153));
        modif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/modifier.png"))); // NOI18N
        modif.setText("Modifier");
        modif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifActionPerformed(evt);
            }
        });
        getContentPane().add(modif, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 170, 50));

        sup.setFont(new java.awt.Font("Comic Sans MS", 0, 22)); // NOI18N
        sup.setForeground(new java.awt.Color(0, 153, 153));
        sup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/supprimer.png"))); // NOI18N
        sup.setText("Supprimer");
        sup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supActionPerformed(evt);
            }
        });
        getContentPane().add(sup, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 330, -1, 50));

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        jLabel8.setText("Recherche:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 200, -1));

        trech.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        trech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trechActionPerformed(evt);
            }
        });
        trech.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                trechKeyReleased(evt);
            }
        });
        getContentPane().add(trech, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 20, 320, 36));

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel9.setText("Liste Reservation");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, -1, 33));

        tableSt.setBackground(new java.awt.Color(204, 204, 204));
        tableSt.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        tableSt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableSt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableStMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableSt);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 100, 630, 280));

        datedeb.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        getContentPane().add(datedeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 192, 350, 30));

        versement.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        getContentPane().add(versement, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 272, 350, 30));

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel6.setText("Date Fin");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 230, 132, 27));

        datefin.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        getContentPane().add(datefin, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 232, 350, 30));

        archive.setFont(new java.awt.Font("Comic Sans MS", 1, 22)); // NOI18N
        archive.setForeground(new java.awt.Color(0, 153, 153));
        archive.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/arc.png"))); // NOI18N
        archive.setText("Archive");
        archive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archiveActionPerformed(evt);
            }
        });
        getContentPane().add(archive, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, 170, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ajoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutActionPerformed
        try {
            st=co.connecterBD().createStatement();
            st.executeUpdate ("insert into reservation(personne,voiture,datedeb,datefin,versement)values('"+
               personne.getSelectedItem()
                +"','"+voiture.getSelectedItem()+"','"+
                datedeb.getText()+"','"+datefin.getText()+"','"+versement.getText()+"')");
            JOptionPane.showMessageDialog(this,"Ajout avec succés");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Echec de L'ajout"+ex.getMessage());
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
        actualisation();
        viderFormulaire();
    }//GEN-LAST:event_ajoutActionPerformed

    private void modifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifActionPerformed
        if (JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment Modifier",
            "Confirme",   JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {
        try {
            st=co.connecterBD().createStatement();
            st.executeUpdate(" Update reservation set voiture='"+voiture.getSelectedItem()
                + "',datedeb='" + datedeb.getText()+"' , datefin='" +datefin.getText()+"' , versement='" +versement.getText() +
                "' where personne= '"+tableSt.getValueAt(tableSt.getSelectedRow(),0 )+ "'");
            JOptionPane.showMessageDialog(this, "Modification avec succés");
            actualisation();
            viderFormulaire();

        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(this, "Echec de la modification"+ex.getMessage());
            Logger.getLogger(reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

        }
    }//GEN-LAST:event_modifActionPerformed

    private void supActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supActionPerformed
       if (JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment Supprimer","Confirme",
            JOptionPane.YES_OPTION)==JOptionPane.YES_OPTION) {
        try {
            st=co.connecterBD().createStatement();
            st.executeUpdate("Delete from reservation where personne = '"+
                tableSt.getValueAt(tableSt.getSelectedRow(),0) + "'");
            JOptionPane.showMessageDialog(this, "Suppression réussi");
            actualisation();
            viderFormulaire();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Echec de la suppression"+ex.getMessage());
            Logger.getLogger(reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

        }
    }//GEN-LAST:event_supActionPerformed

    private void trechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trechActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trechActionPerformed

    private void trechKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_trechKeyReleased
        DefaultTableModel table =(DefaultTableModel)tableSt.getModel();
        String search=trech.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(table);
        tableSt.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_trechKeyReleased

    private void tableStMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableStMouseClicked
        affiche(tableSt.getSelectedRow());
    }//GEN-LAST:event_tableStMouseClicked

    private void personneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personneActionPerformed

    private void archiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archiveActionPerformed
      try {
            st=co.connecterBD().createStatement();
            st.executeUpdate ("insert into archive(personne,voiture,datedeb,datefin,versement)values('"+
               personne.getSelectedItem()
                +"','"+voiture.getSelectedItem()+"','"+
                datedeb.getText()+"','"+datefin.getText()+"','"+versement.getText()+"')");
            JOptionPane.showMessageDialog(this,"Archiver avec succés");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Echec de L'archive"+ex.getMessage());
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        } 

try {
            st=co.connecterBD().createStatement();
            st.executeUpdate("Delete from reservation where personne = '"+
                tableSt.getValueAt(tableSt.getSelectedRow(),0) + "'");
            
            actualisation();
            viderFormulaire();
        } catch (SQLException ex) {
            ;
            Logger.getLogger(reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
        actualisation();
        viderFormulaire();
    }//GEN-LAST:event_archiveActionPerformed

     private void formWindowOpened(java.awt.event.WindowEvent evt) {  }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new reservation().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(reservation.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajout;
    private javax.swing.JButton archive;
    private javax.swing.JTextField datedeb;
    private javax.swing.JTextField datefin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modif;
    private javax.swing.JComboBox personne;
    private javax.swing.JButton sup;
    private javax.swing.JTable tableSt;
    private javax.swing.JTextField trech;
    private javax.swing.JTextField versement;
    private javax.swing.JComboBox voiture;
    // End of variables declaration//GEN-END:variables

    private ArrayList<String> Rplace(ArrayList<String> ar) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
